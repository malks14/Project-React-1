{"ast":null,"code":"var _jsxFileName = \"/Users/guidogreco/Udemy/React/01-starting-setup/src/components/NewExpense/ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './ExpenseForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseForm = () => {\n  _s();\n\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState(''); // const [userInput, setUserInput] = useState({\n  //     enteredTitle: '',\n  //     enteredAmount: '',\n  //     enteredDate: '',\n  // }); esta es la manera de hacerlo con un estado por los componentes\n\n  const titleChangeHandler = event => {\n    setEnteredTitle(event.target.value); // setUserInput((prevState) => { //es una funcion dentro de otra\n    //     return {...prevState, enteredTitle: event.target.value} //los 3 puntos son spread operator\n    // }) //recomienda usar este metodo de dos funciones porque siempre va a utilizar el iltimo snapshot del estado previo\n    //por ejemplo es util cuando se usa en un contador ya que esta dependiendo constantemente del estado previo\n  };\n\n  const amountChangeHandler = event => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const dateChangeHandler = event => {\n    setEnteredDate(event.target.value);\n  };\n\n  const submitHandler = event => {\n    //objeto que reune los 3 elementos porque tenemos los estados separados\n    event.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    };\n    console.log(expenseData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"2019-01-01\",\n          max: \"2022-12-31\",\n          onChange: dateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ExpenseForm, \"/TSOglz5ZV3C6oWQkp/FZ+OWqo4=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["/Users/guidogreco/Udemy/React/01-starting-setup/src/components/NewExpense/ExpenseForm.js"],"names":["React","useState","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","titleChangeHandler","event","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseData","title","amount","date","Date","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nimport './ExpenseForm.css'\n\nconst ExpenseForm = () => {\n    const [enteredTitle, setEnteredTitle]  =  useState('');\n    const [enteredAmount, setEnteredAmount]  =  useState('');\n    const [enteredDate, setEnteredDate]  =  useState('');\n\n    // const [userInput, setUserInput] = useState({\n    //     enteredTitle: '',\n    //     enteredAmount: '',\n    //     enteredDate: '',\n    // }); esta es la manera de hacerlo con un estado por los componentes\n\n    const titleChangeHandler = (event) => {\n        setEnteredTitle(event.target.value)\n        // setUserInput((prevState) => { //es una funcion dentro de otra\n        //     return {...prevState, enteredTitle: event.target.value} //los 3 puntos son spread operator\n        // }) //recomienda usar este metodo de dos funciones porque siempre va a utilizar el iltimo snapshot del estado previo\n        //por ejemplo es util cuando se usa en un contador ya que esta dependiendo constantemente del estado previo\n    }\n\n    const amountChangeHandler = (event) => {\n        setEnteredAmount(event.target.value)\n    }\n\n    const dateChangeHandler = (event) => {\n        setEnteredDate(event.target.value)\n    }\n\n    const submitHandler = (event) => { //objeto que reune los 3 elementos porque tenemos los estados separados\n        event.preventDefault();\n        const expenseData = {\n            title: enteredTitle,\n            amount: enteredAmount,\n            date: new Date(enteredDate)\n        }\n        console.log(expenseData)\n    };\n\n\n    return (\n        <form onSubmit={submitHandler}>\n            <div className='new-expense__controls'>\n                <div className='new-expense__control'>\n                    <label>Title</label>\n                    <input type='text' onChange={titleChangeHandler}/>\n                </div>\n            </div>\n            <div className='new-expense__controls'>\n                <div className='new-expense__control'>\n                    <label>Amount</label>\n                    <input type='number' min=\"0.01\" step=\"0.01\" onChange={amountChangeHandler}/>\n                </div>\n            </div>\n            <div className='new-expense__controls'>\n                <div className='new-expense__control'>\n                    <label>Date</label>\n                    <input type='date' min=\"2019-01-01\" max=\"2022-12-31\" onChange={dateChangeHandler}/>\n                </div>\n            </div>\n            <div className=\"new-expense__actions\">\n                <button type=\"submit\" >Add Expense</button>\n            </div>\n        </form>\n    )\n    \n}\n\nexport default ExpenseForm;\n"]},"metadata":{},"sourceType":"module"}